name: Deploy to AWS ECS

on:
    push:
        branches:
            - main

env:
    AWS_REGION: ap-east-1

jobs:
    build:
        runs-on: ubuntu-latest
        
        steps:
            - name: Checkout code
              uses: actions/checkout@v2

            - name: Setup Node.js 18
              uses: actions/setup-node@v2
              with:
                  node-version: 18

            - name: Install pnpm
              run: npm install -g pnpm

            - name: Install dependencies
              run: pnpm install

            - name: Run unit tests
              run: pnpm run test

            - name: Check code style
              run: pnpm run lint

            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v1
              with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  aws-region: ${{ AWS_REGION }}


            - name: Login to Amazon ECR
              uses: aws-actions/amazon-ecr-login@v1

            - name: Build, tag, and push the image to Amazon ECR
              id: build-image
              env:
                  ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
                  ECR_REPOSITORY: ${{ secrets.REPO_NAME }}
                  IMAGE_TAG: ${{ github.sha }}
              run: |
                  # Build a docker container and push it to ECR 
                  docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
                  echo "Pushing image to ECR..."
                  docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
                  echo "name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

#      - name: Deploy to AWS ECS
#        run: |
#          aws ecs update-service --cluster <ECS_CLUSTER_NAME> --service <ECS_SERVICE_NAME> --force-new-deployment
